# Generated by Django 2.2.12 on 2020-04-27 08:28

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks
import wagtailmetadata.models


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailimages', '0001_squashed_0021'),
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('home', '0050_auto_20200427_0404'),
    ]

    operations = [
        migrations.CreateModel(
            name='SitemapPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('hero', wagtail.core.fields.StreamField([('hero', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('title_tag', wagtail.core.blocks.ChoiceBlock(choices=[('h1', 'h1'), ('p', 'p'), ('h2', 'h2'), ('h3', 'h3'), ('h4', 'h4'), ('h5', 'h5'), ('h6', 'h6')])), ('subtitle', wagtail.core.blocks.TextBlock(required=False)), ('hero_class', wagtail.core.blocks.CharBlock(required=False)), ('cta_text', wagtail.core.blocks.CharBlock(required=False)), ('cta_href', wagtail.core.blocks.CharBlock(default='#', required=False)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False))]))], blank=True, null=True)),
                ('body', wagtail.core.fields.StreamField([('custom_paragraph', wagtail.core.blocks.StructBlock([('body', wagtail.core.blocks.RichTextBlock(required=False)), ('css_class', wagtail.core.blocks.CharBlock(required=False))])), ('html', wagtail.core.blocks.RawHTMLBlock())])),
                ('navbar_icon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
    ]
